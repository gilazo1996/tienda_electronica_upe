<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>