<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AADchXXr/j9AN4vIIiNhtwAAAABJRU5ErkJggg==
</value>
  </data>
</root>